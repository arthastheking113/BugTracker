@model BugTracker.Models.Invite
@using Microsoft.AspNetCore.Identity
@inject SignInManager<CustomUser> SignInManager
@inject UserManager<CustomUser> UserManager
@using BugTracker.Data.Enums
@{
    ViewData["Title"] = "Create";
    var user = await UserManager.GetUserAsync(User);
}
<br />
<br />
<div class="row">
    <div class="col-2"></div>
    <div class="col">

        <div class="card shadow-lg mb-5 bg-white rounded">
            <div class="card-header bg-dark">
                <h3 class="card-title">Create New Invite Ticket</h3>

            </div>
            <div class="card-body">



                <div class="row">

                    <div class="col">

                        <form asp-action="Create">
                            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                            <div class="form-group">
                                <label asp-for="Email" class="control-label ">Email</label>
                                <input asp-for="Email" class="form-control" placeholder="Enter Your Email..." required />

                            </div>
                            @if ((await UserManager.IsInRoleAsync(user, Roles.Admin.ToString())))
                            {
                                <div class="form-group">
                                    <label name="CompanyName" class="control-label">Company Name</label>
                                    <input name="CompanyName" class="form-control" placeholder="Enter your company name..." required />
                                </div>

                            }
                            @if ((await UserManager.IsInRoleAsync(user, Roles.ProjectManager.ToString())))
                            {

                                <div class="form-group">
                                    <label name="Role" class="control-label">Assign Role</label>
                                    <select name="Role" id="DeveloperId" class="form-control" asp-items="ViewBag.Roles"></select>
                                </div>
                            }


                        <div class="form-group">
                            <button type="submit" class="btn btn-primary"><i class="fas fa-location-arrow"></i> Send Invite Ticket</button>
                            @if ((await UserManager.IsInRoleAsync(user, Roles.Admin.ToString())))
                            {
                                <a class="btn btn-secondary" asp-action="Index">Back to List</a>

                            }
                        </div>
                        </form>
                    </div>

                </div>

            </div>
        </div>

    </div>
    <div class="col-2"></div>
</div>



@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
