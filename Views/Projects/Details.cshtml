@model BugTracker.Models.Project
@using BugTracker.Services
@using BugTracker.Service
@inject ICustomProjectService projectService
@using Microsoft.AspNetCore.Identity
@inject IImageService imageService
@inject UserManager<CustomUser> UserManager
@{
    ViewData["Title"] = "Details";
}
@{
    var totalTicket = Model.Tickets.ToList().Count;
    var unAssignTicket = Model.Tickets.Where(t => t.DeveloperId == null).ToList().Count;
    var closeTicket = Model.Tickets.Where(t => t.StatusId == 4).ToList().Count;
    var tickets = Model.Tickets.ToList();

}

<section class="content">
    <div class="container-fluid">
        <!-- Default box -->
        <div class="card">
            <div class="card-header">
                <div class="row">
                    <div class="col">
                        <h3 class="card-title">View Project Details</h3>
                    </div>
                </div>

            </div>
            <div class="card-header">
                <div class="row">
                    <div class="col">
                        <a asp-controller="Projects" asp-action="Index" class="btn btn-secondary"> <i class="fas fa-arrow-circle-left"></i> Back</a>

                        <a asp-controller="Projects" asp-action="Create" class="btn btn-secondary"> <i class="fas fa-tasks"></i> Create New Projects</a>
                        <a class="btn btn-secondary" asp-controller="Tickets" asp-action="Create" method="get">Create New Ticket</a>
                        <a class="btn btn-secondary" asp-controller="Tickets" asp-action="Index" method="get">View All Tickets</a>
                    </div>
                </div>

            </div>
            <div class="card-body">
                <div class="row">
                    <div class="col-12 col-md-12 col-lg-8 order-2 order-md-1">
                        <div class="row" style="border-bottom:1px solid;">
                            <div class="col-12 col-sm-4">
                                <div class="info-box">
                                    <span class="info-box-icon bg-danger elevation-1"><i class="fas fa-poll"></i></span>
                                    <div class="info-box-content">
                                        <span class="info-box-text">Total Tickets</span>
                                        <span class="info-box-number">
                                            @totalTicket
                                            <small>Tickets</small>
                                        </span>
                                    </div>
                                    <!-- /.info-box-content -->
                                </div>
                                <!-- /.info-box -->
                            </div>
                            <div class="col-12 col-sm-4">
                                <div class="info-box">
                                    <span class="info-box-icon bg-warning elevation-1"><i class="fas fa-exclamation"></i></span>
                                    <div class="info-box-content">
                                        <span class="info-box-text">Un-Assigned Tickets</span>
                                        <span class="info-box-number">
                                            @unAssignTicket
                                            <small>Tickets</small>
                                        </span>
                                    </div>
                                    <!-- /.info-box-content -->
                                </div>
                                <!-- /.info-box -->
                            </div>
                            <div class="col-12 col-sm-4">
                                <div class="info-box">
                                    <span class="info-box-icon bg-cyan elevation-1"><i class="fas fa-check-circle"></i></span>
                                    <div class="info-box-content">
                                        <span class="info-box-text">Closed Tickets</span>
                                        <span class="info-box-number">
                                            @closeTicket
                                            <small>Tickets</small>
                                        </span>
                                    </div>
                                    <!-- /.info-box-content -->
                                </div>
                                <!-- /.info-box -->
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-12">
                                <h4>Recent Activity</h4>
                                @foreach (var ticket in tickets)
                                {
                                    if (ticket.DeveloperId != null)
                                    {
                                        byte[] imageData = (await UserManager.FindByIdAsync(ticket.DeveloperId)).ImageData;
                                        string imageType = (await UserManager.FindByIdAsync(ticket.DeveloperId)).ContentType;
                                        <div class="post">
                                            <div class="user-block">
                                                <img class="img-circle img-bordered-sm" src="@imageService.DecodeFileAvatar(imageData, imageType)" alt="user image">
                                                <span class="username">
                                                    <a>@((await UserManager.FindByIdAsync(ticket.DeveloperId)).FullName) - Deverloper</a>
                                                </span>
                                                <span class="description">Shared publicly - @ticket.Created</span>
                                            </div>
                                            <!-- /.user-block -->
                                            <p>
                                                @ticket.Description
                                            </p>

                                            @*<p>
                                                <a href="#" class="link-black text-sm"><i class="fas fa-link mr-1"></i> Demo File 1 v2</a>
                                            </p>*@
                                        </div>
                                    }
                                    else
                                    {
                                        byte[] imageData = (await UserManager.FindByIdAsync(ticket.OwnnerId)).ImageData;
                                        string imageType = (await UserManager.FindByIdAsync(ticket.OwnnerId)).ContentType;
                                        <div class="post">
                                            <div class="user-block">
                                                <img class="img-circle img-bordered-sm" src="@imageService.DecodeFileAvatar(imageData, imageType)" alt="user image">
                                                <span class="username">
                                                    <a>@((await UserManager.FindByIdAsync(ticket.OwnnerId)).FullName) - Project Manager</a>
                                                </span>
                                                <span class="description">Shared publicly - @ticket.Created</span>
                                            </div>
                                            <!-- /.user-block -->
                                            <p>
                                                @ticket.Description
                                            </p>

                                            @*<p>
                                                <a href="#" class="link-black text-sm"><i class="fas fa-link mr-1"></i> Demo File 1 v2</a>
                                            </p>*@
                                        </div>
                                    }



                                }



                            </div>
                        </div>
                    </div>
                    <div class="col-12 col-md-12 col-lg-4 order-1 order-md-2">
                        <h3 class="text-primary"><i class="fas fa-paint-brush"></i> @Html.DisplayFor(model => model.Name)</h3>
                        <p class="text-muted">@Html.DisplayFor(model => model.Description)</p>
                        <br>
                        <div class="text-muted">
                            <div class="row">
                                <div class="col">
                                    <p class="text-sm">
                                        Client Company
                                        <b class="d-block">@Html.DisplayFor(model => model.Company.Name)</b>
                                    </p>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col">
                                    <p class="text-sm">
                                        Project Leader
                                        <b class="d-block">@((await projectService.ProjectManagerOnProjectAsync(Model.Id)).FullName)</b>
                                    </p>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col">
                                    <p class="text-sm">
                                        Developer
                                        @foreach (var developer in await projectService.DeveloperOnProjectAsync(Model.Id))
                                        {
                                            <b class="d-block">@(developer.FullName)</b>
                                        }
                                    </p>
                                </div>
                                <div class="col">
                                    <p class="text-sm">
                                        Submitter
                                        @foreach (var submitter in await projectService.SubmitterOnProjectAsync(Model.Id))
                                        {
                                            <b class="d-block">@(submitter.FullName)</b>
                                        }
                                    </p>
                                </div>
                            </div>


                        </div>

                        <h5 class="mt-5 text-muted">Project files</h5>
                        <ul class="list-unstyled">
                            <li>
                                <a href="" class="btn-link text-secondary"><i class="far fa-fw fa-file-word"></i> Functional-requirements.docx</a>
                            </li>
                            <li>
                                <a href="" class="btn-link text-secondary"><i class="far fa-fw fa-file-pdf"></i> UAT.pdf</a>
                            </li>
                            <li>
                                <a href="" class="btn-link text-secondary"><i class="far fa-fw fa-envelope"></i> Email-from-flatbal.mln</a>
                            </li>
                            <li>
                                <a href="" class="btn-link text-secondary"><i class="far fa-fw fa-image "></i> Logo.png</a>
                            </li>
                            <li>
                                <a href="" class="btn-link text-secondary"><i class="far fa-fw fa-file-word"></i> Contract-10_12_2014.docx</a>
                            </li>
                        </ul>
                        <div class="text-center mt-5 mb-3">
                            <a href="#" class="btn btn-sm btn-primary">Add files</a>
                            <a href="#" class="btn btn-sm btn-warning">Report contact</a>
                        </div>
                    </div>
                </div>
            </div>
            <!-- /.card-body -->
        </div>
        <!-- /.card -->
    </div>
</section>
<!-- /.content -->