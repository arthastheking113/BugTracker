@using Microsoft.AspNetCore.Identity
@inject SignInManager<CustomUser> SignInManager
@inject UserManager<CustomUser> UserManager
@using BugTracker.Service
@inject IImageService imageService


@if (SignInManager.IsSignedIn(User))
{
    <br />

    <a class="sidebar-brand d-flex align-items-center justify-content-center">
        <div class="sidebar-brand-icon">
            <div class="col text-center">
                <img src="@imageService.DecodeFileAvatar((await UserManager.GetUserAsync(User)).ImageData,(await UserManager.GetUserAsync(User)).ContentType)" class="rounded-circle" style="width:30%" />
            </div>
        </div>
    </a>
    <li class="nav-item">
        <a class="nav-link" asp-area="Identity" asp-page="/Account/Manage/Index">Hello @((await UserManager.GetUserAsync(User)).FullName)</a>
    </li>
    <li class="nav-item">
        <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
            <button type="submit" class="nav-link btn btn-link">Logout</button>
        </form>
    </li>
}
else
{
    <li class="nav-item">
        <a class="nav-link" asp-area="Identity" asp-page="/Account/Register">Register</a>
    </li>
    <li class="nav-item">
        <a class="nav-link" asp-area="Identity" asp-page="/Account/Login">Login</a>
    </li>
}

