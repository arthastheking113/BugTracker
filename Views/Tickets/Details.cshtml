@model BugTracker.Models.Ticket
@using Microsoft.AspNetCore.Identity
@using BugTracker.Data
@using BugTracker.Data.Enums 
@inject ApplicationDbContext ApplicationDbContext
@inject SignInManager<CustomUser> SignInManager
@inject UserManager<CustomUser> UserManager
@using BugTracker.Services
@using BugTracker.Service 
@inject ICustomFileService CustomFileService 
@inject IImageService imageService 

@{
    ViewData["Title"] = "Details";
}

<div class="row">

    <div class="col-5">
        <div class="card">
            <div class="card-header bg-dark">
                Ticket Details
            </div>

            <div class="card-body">
                <dl class="row">
                    <dt class="col-sm-2">
                        Id
                    </dt>
                    <dd class="col-sm-10">
                        #@Html.DisplayFor(model => model.Id)
                    </dd>
                    <dt class="col-sm-2">
                        @Html.DisplayNameFor(model => model.Name)
                    </dt>
                    <dd class="col-sm-10">
                        @Html.DisplayFor(model => model.Name)
                    </dd>
                    <dt class="col-sm-2">
                        @Html.DisplayNameFor(model => model.Description)
                    </dt>
                    <dd class="col-sm-10">
                        @Html.DisplayFor(model => model.Description)
                    </dd>
                    <dt class="col-sm-2">
                        @Html.DisplayNameFor(model => model.Created)
                    </dt>
                    <dd class="col-sm-10">
                        @Model.Created.ToString("dddd dd MMMM yyyy hh:mm tt")
                    </dd>
                    <dt class="col-sm-2">
                        @Html.DisplayNameFor(model => model.Updated)
                    </dt>
                    <dd class="col-sm-10">
                        @Model.Updated.ToString("dddd dd MMMM yyyy hh:mm tt")
                    </dd>
                    <dt class="col-sm-2">
                        @Html.DisplayNameFor(model => model.Developer)
                    </dt>
                    <dd class="col-sm-10">
                        @Html.DisplayFor(model => model.Developer.FullName)
                    </dd>
                    <dt class="col-sm-2">
                        @Html.DisplayNameFor(model => model.Ownner)
                    </dt>
                    <dd class="col-sm-10">
                        @Html.DisplayFor(model => model.Ownner.FullName)
                    </dd>
                    <dt class="col-sm-2">
                        @Html.DisplayNameFor(model => model.Project)
                    </dt>
                    <dd class="col-sm-10">
                        @Html.DisplayFor(model => model.Project.Name)
                    </dd>
                    <dt class="col-sm-2">
                        @Html.DisplayNameFor(model => model.Status)
                    </dt>
                    <dd class="col-sm-10">
                        @Html.DisplayFor(model => model.Status.Name)
                    </dd>
                    <dt class="col-sm-2">
                        @Html.DisplayNameFor(model => model.Priority)
                    </dt>
                    <dd class="col-sm-10">
                        @Html.DisplayFor(model => model.Priority.Name)
                    </dd>
                    <dt class="col-sm-2">
                        @Html.DisplayNameFor(model => model.TicketType)
                    </dt>
                    <dd class="col-sm-10">
                        @Html.DisplayFor(model => model.TicketType.Name)
                    </dd>
                </dl>
                <div class="row">
                    <div class="col">
                        <a class="btn btn-primary" asp-action="Edit" asp-route-id="@Model.Id">Edit</a>
                        @if ((await UserManager.IsInRoleAsync(await UserManager.GetUserAsync(User), Roles.Admin.ToString())))
                        {
                        <a class="btn btn-danger" asp-action="Delete" asp-route-id="@Model.Id">Delete</a>
                        }

                        <a class="btn btn-secondary" asp-action="Index">Back to List</a>
                    </div>
                </div>
            </div>

        </div>
        <div class="card">
            <div class="card-header bg-dark">
               <h3 class="card-title"> Attach File</h3>
            </div>
            <div class="card-body">
                <div class="row ">
                    <form asp-action="Create" asp-controller="TicketAttachments" enctype="multipart/form-data" method="post">
                        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                        <input type="hidden" asp-for="@Model.Id" name="TicketId">
                        <div class="media-body ml-3 ">
                            <label>Description<input name="Description" type="text" class="form-control" required placeholder="Add Description..."></label>      
                            <label class="btn btn-outline-secondary btn-sm">
                                Upload File
                                <input asp-for="@Model.Attachments.FirstOrDefault().FormFile" type="file" required/>
                            </label>
                        </div>
                        <div class="row">
                            <div class="col text-center">
                                <button type="submit" class="btn btn-outline-secondary md-btn-flat">Upload</button>
                            </div>
                        </div>
                    </form>      
                </div>
            </div>
            <div class="card-body">
                <div class="row">

                    <div class="col">
                        <div class="row clearfix">
                            @foreach (var item in Model.Attachments)
                            {
                                <div class="col-sm-2">
                                    <div class="card">
                                        <div class="file">
                                            <a asp-controller="TicketAttachments" asp-action="Details" asp-route-id="@item.Id" >
                                                <div class="hover">
                                                    <form asp-controller="TicketAttachments" asp-action="Details" asp-route-id="@item.Id">
                                                        <button type="submit" class="btn btn-icon btn-danger">
                                                            <i class="fa fa-trash"></i>
                                                        </button>
                                                    </form>
                                                   
                                                </div>
                                                <div class="icon">
                                                    <img src="@CustomFileService.GetFileIcon(item.FileName)" style="height:60px;width:60px" />
                                                </div>
                                                <div class="file-name">
                                                    <p class="m-b-5 text-muted">@System.IO.Path.GetFileNameWithoutExtension(item.FileName)</p>
                                                    <small>Size: @CustomFileService.FormatFileSize(item.FileData.Length) <span class="date text-muted">@item.Created.ToString("dd MMMM yyyy - hh:mm tt")</span></small>
                                                </div>
                                            </a>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>

                </div>
            </div>  
        </div>
     

       
       

    </div>

    <div class="col">


        <div class="card">
            <div class="card-header bg-dark">
                <h3 class="card-title">Ticket Histories</h3>
                <div class="card-tools">
                    <div class="input-group input-group-sm">
                        <input type="text" class="form-control" placeholder="Search Histories" id="searchTicketHistory">
                        <div class="input-group-append">
                            <div class="btn btn-primary">
                                <i class="fas fa-search"></i>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="card-body">
                @{
                    var history = ApplicationDbContext.TicketHistory.Where(t => t.TicketId == Model.Id).OrderByDescending(c => c.Created).ToList();
                }
                <table class="table" id="tickethistory">
                    <thead>
                        <tr>
                            <th>
                                Created
                            </th>
                            <th>
                                Property
                            </th>
                            <th>
                                Old Value
                            </th>
                            <th>
                                New Value
                            </th>
                            <th>
                                User
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in history)
                        {
                            <tr>
                                <td>
                                   @item.Created.ToString("dddd dd MMMM yyyy hh:mm tt")
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Property)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.OldValue)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.NewValue)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.CustomUser.FullName)
                                </td>

                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    
        <div class="row">
            <div class="col">
                <div class="card">
                    <div class="card-header bg-dark">
                        Comments (@ApplicationDbContext.Comment.Where(c => c.TicketId == Model.Id).ToList().Count)
                    </div>
                    <div class="card-body">
                        <form asp-controller="Comments" asp-action="Create" method="post">
                            <input type="hidden" name="TicketId" value="@Model.Id" />
                            <input type="hidden" name="CustomUserId" value="@(await UserManager.GetUserIdAsync(await UserManager.GetUserAsync(User)))" />
                            <div class="form-group">
                                <textarea id="Content" name="Content" class="form-control" rows="4" required></textarea>
                            </div>

                            <input type="submit" value="Comment" class="btn btn-secondary" />
                        </form>
                    </div>
                </div>
                <div class="row">
                    @{
                        var comments = ApplicationDbContext.Comment.Where(t => t.TicketId == Model.Id).OrderByDescending(c => c.Updated).ToList();
                        var currentTime = DateTime.Now;
                    }
                    <div class="container">
                        <div class="row">
                            <div class="col">
                                @foreach (var comment in comments)
                                {
                                    var timeSpan = currentTime.Subtract(comment.Created);
                                    var eslapseSecond = timeSpan.Seconds;
                                    var eslapseMinute = timeSpan.Minutes;
                                    var eslapseHours = timeSpan.Hours;
                                    var eslapseDate = timeSpan.Days;
                                    string commentdate;
                                    if (eslapseDate >= 1)
                                    {
                                        commentdate = eslapseDate.ToString() + " Days Ago";

                                    }
                                    else if (eslapseHours >= 1)
                                    {
                                        commentdate = eslapseHours.ToString() + " Hours Ago";
                                    }
                                    else if (eslapseMinute >= 1)
                                    {
                                        commentdate = eslapseMinute.ToString() + " Minutes Ago";
                                    }
                                    else
                                    {
                                        commentdate = eslapseSecond.ToString() + " Seconds Ago";
                                    }
                                <div class="media mb-4" style="border-bottom:2px solid rgb(28, 213, 219)">
                                    <img class="d-flex mr-3 rounded-circle" style="width:5%" src="@imageService.DecodeFileAvatar((await UserManager.FindByIdAsync(comment.CustomUserId)).ImageData,(await UserManager.FindByIdAsync(comment.CustomUserId)).ContentType)" alt="">
                                    <div class="media-body">
                                        <div class="row">
                                            <div class="col text-left">
                                                <h5 class="mt-0">@comment.CustomUser.FullName</h5>
                                            </div>
                                            @if (User.IsInRole("Administrator") || User.IsInRole("Moderator"))
                                            {
                                                <div class="col text-right">
                                                    <a class="btn btn-secondary" asp-controller="PostComments" asp-action="Edit" asp-route-id="@comment.Id">Edit</a>
                                                    <a class="btn btn-secondary" asp-controller="PostComments" asp-action="Delete" asp-route-id="@comment.Id">Delete</a>
                                                </div>
                                            }

                                        </div>

                                        <div class="row" style="margin:0px;padding:0px;margin-bottom:15px">
                                            <div class="col text-left" style="padding:0px 0px">
                                                @Html.Raw(comment.Content)
                                            </div>
                                            <div class="col text-right">
                                                <p style="margin:0px;padding:0px;">@commentdate</p>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                   
                                }

                            </div>
                        </div>

                    </div>
                </div>
            </div>


        </div>

    </div>
    


</div>

<br />
<br />

